{
  "command": "docker",
  "description": "Container management platform",
  "global_options": [
    {
      "long": "--version",
      "short": "-v",
      "description": "Print version information"
    },
    {
      "long": "--help",
      "short": "-h",
      "description": "Print usage"
    },
    {
      "long": "--debug",
      "description": "Enable debug mode"
    },
    {
      "long": "--config",
      "short": "-c",
      "description": "Location of client config files"
    }
  ],
  "subcommands": [
    {
      "name": "build",
      "description": "Build an image from a Dockerfile",
      "options": [
        {
          "long": "--tag",
          "short": "-t",
          "description": "Name and tag for the image"
        },
        {
          "long": "--file",
          "short": "-f",
          "description": "Name of the Dockerfile"
        },
        {
          "long": "--no-cache",
          "description": "Do not use cache when building"
        },
        {
          "long": "--pull",
          "description": "Always attempt to pull base image"
        },
        {
          "long": "--quiet",
          "short": "-q",
          "description": "Suppress output"
        },
        {
          "long": "--build-arg",
          "description": "Set build-time variables"
        },
        {
          "long": "--cache-from",
          "description": "Images to consider as cache sources"
        },
        {
          "long": "--progress",
          "description": "Set type of progress output (auto, plain, tty)"
        },
        {
          "long": "--secret",
          "description": "Secret file to expose to the build (only if BuildKit enabled)"
        },
        {
          "long": "--ssh",
          "description": "SSH agent socket or keys to expose to the build (only if BuildKit enabled)"
        }
      ],
      "arguments": [
        {
          "name": "context",
          "description": "Build context path (default: current directory)"
        }
      ],
      "subcommands": []
    },
    {
      "name": "run",
      "description": "Run a command in a new container",
      "options": [
        {
          "long": "--name",
          "description": "Assign a name to the container"
        },
        {
          "long": "--detach",
          "short": "-d",
          "description": "Run in detached mode"
        },
        {
          "long": "--publish",
          "short": "-p",
          "description": "Publish container ports to host"
        },
        {
          "long": "--rm",
          "description": "Automatically remove container when it exits"
        },
        {
          "long": "--interactive",
          "short": "-i",
          "description": "Keep STDIN open"
        },
        {
          "long": "--tty",
          "short": "-t",
          "description": "Allocate a pseudo-TTY"
        },
        {
          "long": "--env",
          "short": "-e",
          "description": "Set environment variables"
        },
        {
          "long": "--volume",
          "short": "-v",
          "description": "Bind mount a volume"
        },
        {
          "long": "--add-host",
          "description": "Add a custom host-to-IP mapping (host:ip)"
        },
        {
          "long": "--device",
          "description": "Add a host device to the container"
        },
        {
          "long": "--dns",
          "description": "Set custom DNS servers"
        },
        {
          "long": "--entrypoint",
          "description": "Overwrite the default ENTRYPOINT of the image"
        },
        {
          "long": "--expose",
          "description": "Expose a port or a range of ports"
        },
        {
          "long": "--gpus",
          "description": "GPU devices to add to the container ('all' to pass all GPUs)"
        },
        {
          "long": "--hostname",
          "short": "-h",
          "description": "Container host name"
        },
        {
          "long": "--mac-address",
          "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)"
        },
        {
          "long": "--network",
          "description": "Connect a container to a network"
        },
        {
          "long": "--platform",
          "description": "Set platform if server is multi-platform capable"
        },
        {
          "long": "--pull",
          "description": "Pull image before running ('always', 'missing', 'never')"
        },
        {
          "long": "--user",
          "short": "-u",
          "description": "Username or UID (format: <name|uid>[:<group|gid>])"
        },
        {
          "long": "--workdir",
          "short": "-w",
          "description": "Working directory inside the container"
        }
      ],
      "arguments": [
        {
          "name": "image",
          "description": "Image name or ID"
        },
        {
          "name": "command",
          "description": "Command to run (optional)"
        }
      ],
      "subcommands": []
    },
    {
      "name": "ps",
      "description": "List running containers",
      "options": [
        {
          "long": "--all",
          "short": "-a",
          "description": "Show all containers"
        },
        {
          "long": "--format",
          "description": "Format output using Go template"
        },
        {
          "long": "--latest",
          "short": "-l",
          "description": "Show only the latest container"
        },
        {
          "long": "--no-trunc",
          "description": "Do not truncate output"
        },
        {
          "long": "--quiet",
          "short": "-q",
          "description": "Only display container IDs"
        },
        {
          "long": "--size",
          "short": "-s",
          "description": "Display sizes"
        },
        {
          "long": "--filter",
          "short": "-f",
          "description": "Filter output based on conditions"
        }
      ],
      "arguments": [],
      "subcommands": []
    },
    {
      "name": "images",
      "description": "List images",
      "options": [
        {
          "long": "--all",
          "short": "-a",
          "description": "Show all images"
        },
        {
          "long": "--digests",
          "description": "Show digests"
        },
        {
          "long": "--format",
          "description": "Format output using Go template"
        },
        {
          "long": "--no-trunc",
          "description": "Do not truncate output"
        },
        {
          "long": "--quiet",
          "short": "-q",
          "description": "Only display IDs"
        },
        {
          "long": "--filter",
          "short": "-f",
          "description": "Filter output based on conditions"
        }
      ],
      "arguments": [],
      "subcommands": []
    },
    {
      "name": "pull",
      "description": "Pull an image from a registry",
      "options": [
        {
          "long": "--all-tags",
          "short": "-a",
          "description": "Download all tagged images"
        },
        {
          "long": "--disable-content-trust",
          "description": "Skip image verification"
        },
        {
          "long": "--platform",
          "description": "Set platform for image"
        },
        {
          "long": "--quiet",
          "short": "-q",
          "description": "Suppress progress output"
        }
      ],
      "arguments": [
        {
          "name": "image",
          "description": "Image name or ID"
        }
      ],
      "subcommands": []
    },
    {
      "name": "stop",
      "description": "Stop one or more running containers",
      "options": [
        {
          "long": "--time",
          "short": "-t",
          "description": "Seconds to wait for stop before killing"
        }
      ],
      "arguments": [
        {
          "name": "container",
          "description": "Container name or ID"
        }
      ],
      "subcommands": []
    },
    {
      "name": "rm",
      "description": "Remove one or more containers",
      "options": [
        {
          "long": "--force",
          "short": "-f",
          "description": "Force removal of running container"
        },
        {
          "long": "--volumes",
          "short": "-v",
          "description": "Remove the volumes associated with the container"
        }
      ],
      "arguments": [
        {
          "name": "container",
          "description": "Container name or ID"
        }
      ],
      "subcommands": []
    },
    {
      "name": "exec",
      "description": "Run a command in a running container",
      "options": [
        {
          "long": "--detach",
          "short": "-d",
          "description": "Run in detached mode"
        },
        {
          "long": "--interactive",
          "short": "-i",
          "description": "Keep STDIN open"
        },
        {
          "long": "--tty",
          "short": "-t",
          "description": "Allocate a pseudo-TTY"
        },
        {
          "long": "--user",
          "short": "-u",
          "description": "Username or UID"
        },
        {
          "long": "--privileged",
          "description": "Give extended privileges to the command"
        },
        {
          "long": "--workdir",
          "short": "-w",
          "description": "Working directory inside the container"
        },
        {
          "long": "--env",
          "short": "-e",
          "description": "Set environment variables"
        }
      ],
      "arguments": [
        {
          "name": "container",
          "description": "Container name or ID"
        },
        {
          "name": "command",
          "description": "Command to execute"
        }
      ],
      "subcommands": []
    }
  ]
}