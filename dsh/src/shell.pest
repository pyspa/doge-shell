sp = _{ " " | "\t" | "\r" }
word_char = _{
    !("|" | "&" | ";" | " " | "\t" | "\r" | "\n" | "`" | "{" | "}" | "<" | ">" | "(" | ")" | "$" | "\"" | "'" | "*" | "?")
    ~ ANY
}

word = { word_char+ }
variable = { "$" ~ word }
glob_word = { word* ~ (word_char | "*" )+ }

s_quoted = { "\'" ~ s_quoted_inner* ~ "\'" }
s_quoted_inner = _{
    literal_s_quoted
}
literal_s_quoted = ${ ( "\\'"  | !("\'") ~ ANY | sp)+ }

d_quoted = { "\"" ~ d_quoted_inner* ~ "\"" }
d_quoted_inner = _{
    literal_d_quoted
}
literal_d_quoted = ${
    (
        !("\"" | "\\" | "`" | "$") ~ ANY
        | "\\" ~ ANY
        | sp
    )+
}

subshell = { "(" ~ group_list ~ ")" }
group_list = _{
    commands
}

quoted = _{ d_quoted|s_quoted }

stdouterr_redirect_direction_out = { "&>" }
stdouterr_redirect_direction_append = { "&>>" }
stderr_redirect_direction_out = { "2>" }
stderr_redirect_direction_append = { "2>>" }
stdout_redirect_direction_out = { ">" }
stdout_redirect_direction_append = { ">>" }
stdouterr_redirect_direction = { ( stdouterr_redirect_direction_append | stdouterr_redirect_direction_out ) }
stderr_redirect_direction = { ( stderr_redirect_direction_append | stderr_redirect_direction_out ) }
stdout_redirect_direction = { ( stdout_redirect_direction_append | stdout_redirect_direction_out ) }
redirect = { (stdouterr_redirect_direction | stderr_redirect_direction | stdout_redirect_direction) ~ sp* ~ span }
span = { quoted | glob_word | word | variable | subshell }
argv0 = { span }
args = { (sp* ~ (redirect|span))+ }

background_op = _{ !("&&") ~ "&" }
pipeline_op = _{ "|" }
sequential_op = { ";" }
and_op = { "&&" }
or_op = { "||" }

command_list_sep = { sequential_op | and_op | or_op }
simple_command = { sp* ~ argv0 ~ args* }
simple_command_bg = { simple_command ~ sp* ~ background_op}
pipe_command = { pipeline_op ~ sp* ~ (simple_command_bg|simple_command) ~ sp* }
command = { (sp* ~ simple_command_bg|simple_command)* ~ sp* ~ pipe_command* }
commands = { (sp* ~ command) ~ (command_list_sep ~ sp* ~ command)*   }
